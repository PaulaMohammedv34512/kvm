# view NVIDIA card id for vm
[root@GG33D33-172-31-1-5 ~]# lspci -n |grep 10de
18:00.0 0302: 10de:1eb8 (rev a1)
3b:00.0 0302: 10de:1eb8 (rev a1)
5e:00.0 0302: 10de:1eb8 (rev a1)
5f:00.0 0302: 10de:1eb8 (rev a1)
86:00.0 0302: 10de:1eb8 (rev a1)
87:00.0 0302: 10de:1eb8 (rev a1)
af:00.0 0302: 10de:1eb8 (rev a1)

# Turn on IOMMU in GRUB. Edit file /etc/default/grub and add parameters to the kernel
vi /etc/default/grub 
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="crashkernel=auto intel_iommu=on iommu=pt pci=realloc pci=nocrsrd blacklist=nouveau nouveau.modeset=0 pci-stub.ids=10de:1eb8 rhgb quiet"
GRUB_DISABLE_RECOVERY="true"

# IOMMU config in grub to take effect need reboot.
grub2-mkconfig -o /boot/grub2/grub.cfg

# check IOMMU
dmesg | grep 'IOMMU enabled'

# blacklist
vi /etc/modprobe.d/blacklist.conf 
blacklist nouveau
options nouveau modeset=0

# check nouveau disable
lsmod |grep nouveau

# VFIO
vi /etc/modules-load.d/vfio-pci.conf 
ovfio-pci

# create win2016 vm with script
read -p "input vm iso name: " iso
read -p "input vm name:" name
read -p "input memory size [24]G:" mem
mem=${mem:-24}
mem=$((mem*1024))
read -p "input vcpu core [8]:" cpu
cpu=${cpu:-8}
read -p "VNC port [5921]:" port
port=${port:-5921}
read -p "VNC passwd:" pass
pass=${pass:-liyang}
qemu-img create -f qcow2 /vmpool/$name 100g
virt-install --name $name --virt-type kvm --ram $mem --vcpus $cpu,maxvcpus=12 \
--cdrom=/vmpool/iso/$iso --disk path=/vmpool/$name \
--network bridge=ovirtmgmt,model=virtio --graphics vnc,password=$pass,port=$port,listen=0.0.0.0 \
--noautoconsole --noreboot \
--hostdev 18:00.0

cp /etc/libvirt/qemu/$name.xml /vmpool/xml/$name.xml
virsh undefine $name
sed -i "/<\/console>/a <input type='tablet' bus='usb'\/>" /vmpool/xml/$name.xml
virsh define /vmpool/xml/$name.xml

echo "vmname:$name vncport:$port vncpasswd:$pass" >> /vmpool/vm-list
echo "please start vm and via VNC port $port connection vm"
